cmake_minimum_required(VERSION 3.22)
set(PROJECT_NAME ArmoniK.SDK.Worker.Test)
set(NAMESPACE ArmoniK::Sdk::Worker::Test)
include(CMakePackageConfigHelpers)

project(${PROJECT_NAME})

set(CMAKE_CXX_STANDARD 17)

find_package(ArmoniK.SDK.Worker CONFIG REQUIRED)

SET(SOURCES_FILES_DIR "${CMAKE_CURRENT_SOURCE_DIR}/src")
SET(HEADER_FILES_DIR "${CMAKE_CURRENT_SOURCE_DIR}/include")

SET(WORKER_FILES "${CMAKE_CURRENT_SOURCE_DIR}")
SET(WORKER_SOURCE_DIR "${WORKER_FILES}/src")
SET(WORKER_HEADER_DIR "${WORKER_FILES}/include")
FILE(GLOB_RECURSE SRC_WORKER_FILES ${WORKER_SOURCE_DIR}/*.cpp)
FILE(GLOB_RECURSE HEADER_WORKER_FILES ${WORKER_HEADER_DIR}/*.h)

add_library(${PROJECT_NAME} SHARED ${SRC_WORKER_FILES} ${HEADER_WORKER_FILES})

target_link_libraries(${PROJECT_NAME} PUBLIC "-Wl,--whole-archive" ArmoniK.SDK.Worker "-Wl,--no-whole-archive")

if(MSVC)
    target_compile_options(${PROJECT_NAME} PRIVATE /W4)
else()
    target_compile_options(${PROJECT_NAME} PRIVATE -Wall -Wextra -Wpedantic)
endif()

target_compile_definitions(${PROJECT_NAME} PUBLIC SDK_END2END_NAMESPACE=${NAMESPACE})

target_include_directories(${PROJECT_NAME}
        PUBLIC
        "$<BUILD_INTERFACE:${WORKER_HEADER_DIR}>"
        )

set_property(TARGET ${PROJECT_NAME} PROPERTY VERSION ${VERSION})
set_property(TARGET ${PROJECT_NAME} PROPERTY SOVERSION 0)
set_property(TARGET ${PROJECT_NAME} PROPERTY INTERFACE_${PROJECT_NAME}_MAJOR_VERSION 0)
set_property(TARGET ${PROJECT_NAME} APPEND PROPERTY COMPATIBLE_INTERFACE_STRING ${PROJECT_NAME}_MAJOR_VERSION)

install(TARGETS ${PROJECT_NAME}
        RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
        ARCHIVE DESTINATION ${CMAKE_INSTALL_BINDIR})
