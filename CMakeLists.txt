cmake_minimum_required(VERSION 3.22)

if(NOT DEFINED VERSION)
    set(VERSION 0.1.0)
endif()
string(REGEX MATCHALL "[0-9]+" version_list ${VERSION})
list(GET version_list 0 version_major)
list(GET version_list 1 version_minor)
list(GET version_list 2 version_patch)
message(STATUS "Version ${VERSION}")

set(SOLUTION_NAME ArmoniK.SDK)
project(${SOLUTION_NAME} C CXX)

if(NOT DEFINED BUILD_DIR)
    set(BUILD_DIR "${CMAKE_SOURCE_DIR}/build")
endif()
if(NOT DEFINED ARMONIK_API_DIR)
    if(UNIX)
        set(ARMONIK_API_DIR "/armonik/api")
    else()
        set(ARMONIK_API_DIR ${CMAKE_SOURCE_DIR}/../ArmoniK.Api/packages/cpp/out/install/x64-Debug)
    endif()
endif()
list(APPEND CMAKE_PREFIX_PATH ${ARMONIK_API_DIR})
if (WIN32)
    list(APPEND CMAKE_PREFIX_PATH "${CMAKE_SOURCE_DIR}/../ArmoniK.Api/packages/cpp/tools/win64/lib/cmake/grpc")
    list(APPEND CMAKE_PREFIX_PATH "${CMAKE_SOURCE_DIR}/../ArmoniK.Api/packages/cpp/tools/win64/cmake")
    set(INSTALL_SDK_DIR ${CMAKE_SOURCE_DIR}/install)
    set(Protobuf_USE_STATIC_LIBS ON)
else()
    # set(INSTALL_SDK_DIR "/app/install")
    if(NOT DEFINED INSTALL_SDK_DIR)
        set(INSTALL_SDK_DIR "${CMAKE_SOURCE_DIR}/install")
    endif()
endif ()
list(APPEND CMAKE_PREFIX_PATH ${INSTALL_SDK_DIR})
string(REPLACE ";" "|" CMAKE_PREFIX_PATH_ALT_SEP "${CMAKE_PREFIX_PATH}")

# make cache variables for install destinations
include(GNUInstallDirs)
include(CMakePackageConfigHelpers)

option(BUILD_END2END "Build End2End test" OFF)
option(BUILD_WORKER "Build Worker" ON)
option(BUILD_CLIENT "Build Client" ON)
option(BUILD_DYNAMICWORKER "Build DynamicWorker" OFF)
option(BUILD_WORKERTEST "Build Worker Test" OFF)
option(BUILD_SDK "Build SDK" ON)

if(BUILD_SDK)
    add_subdirectory(ArmoniK.SDK.Common)

    if(BUILD_WORKER)
        add_subdirectory(ArmoniK.SDK.Worker)
    endif()

    if(BUILD_CLIENT)
        add_subdirectory(ArmoniK.SDK.Client)
    endif()
endif()

if(BUILD_DYNAMICWORKER)
    add_subdirectory(ArmoniK.SDK.DynamicWorker)
endif()

if(BUILD_END2END)
    if(BUILD_CLIENT)
        add_subdirectory(ArmoniK.SDK.Client.Test)
    endif()

    if(UNIX AND BUILD_WORKERTEST)
        add_subdirectory(ArmoniK.SDK.Worker.Test)
    endif()
endif ()

include(Packaging.cmake)
include(CPack)
